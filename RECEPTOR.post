<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Servidor de Notificaciones POST</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
        
        .notification-enter {
            animation: slideIn 0.3s ease-out;
        }
        
        .status-active {
            animation: pulse 2s infinite;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- Header -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-gray-800">Servidor de Notificaciones POST</h1>
                    <p class="text-gray-600 mt-2">Monitor en tiempo real de notificaciones entrantes</p>
                </div>
                <div class="flex items-center space-x-4">
                    <div class="flex items-center">
                        <div id="statusIndicator" class="w-3 h-3 bg-green-500 rounded-full status-active mr-2"></div>
                        <span class="text-sm font-medium text-gray-700">Servidor Activo</span>
                    </div>
                    <button id="clearBtn" class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-colors">
                        Limpiar Historial
                    </button>
                </div>
            </div>
        </div>

        <!-- Server Info -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">Endpoint</h3>
                <code class="bg-gray-100 px-3 py-2 rounded text-sm block">POST /api/notifications</code>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">Puerto</h3>
                <span class="text-2xl font-bold text-blue-600">3000</span>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">Total Recibidas</h3>
                <span id="totalCount" class="text-2xl font-bold text-green-600">0</span>
            </div>
        </div>

        <!-- Simulate Notification Button -->
        <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Simular Notificaci√≥n POST</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Tipo de Notificaci√≥n</label>
                    <select id="notificationType" class="w-full border border-gray-300 rounded-lg px-3 py-2">
                        <option value="payment">Pago Recibido</option>
                        <option value="user">Nuevo Usuario</option>
                        <option value="order">Nueva Orden</option>
                        <option value="system">Alerta del Sistema</option>
                        <option value="webhook">Webhook Externo</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Mensaje</label>
                    <input id="notificationMessage" type="text" placeholder="Mensaje personalizado..." 
                           class="w-full border border-gray-300 rounded-lg px-3 py-2">
                </div>
            </div>
            <button id="simulateBtn" class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg transition-colors">
                üì° Enviar Notificaci√≥n POST
            </button>
        </div>

        <!-- Notifications List -->
        <div class="bg-white rounded-lg shadow-lg">
            <div class="p-6 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-800">Notificaciones Recibidas</h3>
            </div>
            <div id="notificationsList" class="max-h-96 overflow-y-auto">
                <div class="p-8 text-center text-gray-500">
                    <div class="text-4xl mb-4">üì≠</div>
                    <p>No hay notificaciones a√∫n. Simula una para comenzar.</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        let notificationCount = 0;
        const notificationsList = document.getElementById('notificationsList');
        const totalCountElement = document.getElementById('totalCount');
        
        const notificationTypes = {
            payment: { icon: 'üí≥', color: 'bg-green-100 border-green-300', textColor: 'text-green-800' },
            user: { icon: 'üë§', color: 'bg-blue-100 border-blue-300', textColor: 'text-blue-800' },
            order: { icon: 'üì¶', color: 'bg-purple-100 border-purple-300', textColor: 'text-purple-800' },
            system: { icon: '‚ö†Ô∏è', color: 'bg-yellow-100 border-yellow-300', textColor: 'text-yellow-800' },
            webhook: { icon: 'üîó', color: 'bg-gray-100 border-gray-300', textColor: 'text-gray-800' }
        };

        function addNotification(type, message) {
            notificationCount++;
            totalCountElement.textContent = notificationCount;
            
            const typeConfig = notificationTypes[type];
            const timestamp = new Date().toLocaleString('es-ES');
            
            // Clear empty state if this is the first notification
            if (notificationCount === 1) {
                notificationsList.innerHTML = '';
            }
            
            const notificationElement = document.createElement('div');
            notificationElement.className = `border-l-4 ${typeConfig.color} p-4 border-b border-gray-100 notification-enter`;
            
            notificationElement.innerHTML = `
                <div class="flex items-start justify-between">
                    <div class="flex items-start space-x-3">
                        <div class="text-2xl">${typeConfig.icon}</div>
                        <div class="flex-1">
                            <div class="flex items-center space-x-2 mb-1">
                                <span class="font-semibold ${typeConfig.textColor}">${type.toUpperCase()}</span>
                                <span class="text-xs text-gray-500">#${notificationCount.toString().padStart(4, '0')}</span>
                            </div>
                            <p class="text-gray-700">${message}</p>
                            <div class="mt-2 text-xs text-gray-500">
                                <span>üìÖ ${timestamp}</span>
                                <span class="ml-4">üåê IP: 192.168.1.${Math.floor(Math.random() * 255)}</span>
                            </div>
                        </div>
                    </div>
                    <div class="text-xs ${typeConfig.textColor} font-medium">
                        POST 200 ‚úì
                    </div>
                </div>
            `;
            
            notificationsList.insertBefore(notificationElement, notificationsList.firstChild);
        }

        // Simulate notification button
        document.getElementById('simulateBtn').addEventListener('click', function() {
            const type = document.getElementById('notificationType').value;
            const customMessage = document.getElementById('notificationMessage').value;
            
            const defaultMessages = {
                payment: 'Pago de $150.00 procesado exitosamente',
                user: 'Nuevo usuario registrado: juan.perez@email.com',
                order: 'Nueva orden #ORD-2024-001 recibida',
                system: 'Uso de CPU alto detectado en servidor-01',
                webhook: 'Webhook recibido desde servicio externo'
            };
            
            const message = customMessage || defaultMessages[type];
            addNotification(type, message);
            
            // Clear custom message after sending
            document.getElementById('notificationMessage').value = '';
        });

        // Clear history button
        document.getElementById('clearBtn').addEventListener('click', function() {
            notificationCount = 0;
            totalCountElement.textContent = '0';
            notificationsList.innerHTML = `
                <div class="p-8 text-center text-gray-500">
                    <div class="text-4xl mb-4">üì≠</div>
                    <p>No hay notificaciones a√∫n. Simula una para comenzar.</p>
                </div>
            `;
        });

        // Auto-generate some sample notifications
        setTimeout(() => {
            addNotification('system', 'Servidor iniciado correctamente en puerto 3000');
        }, 1000);

        setTimeout(() => {
            addNotification('webhook', 'Configuraci√≥n de webhook completada');
        }, 2500);
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'9746e4f8358c1d14',t:'MTc1NjA4MDkyMC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
